" Mike's .vimrc. uses vundle so get that first.
" do vundle settings first
set nocompatible              " required for vundle
filetype off                  " required for vundle
" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'
" vundle plugins:
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'ntpeters/vim-better-whitespace'
Plugin 'airblade/vim-gitgutter'
Plugin 'scrooloose/syntastic'
Plugin 'pearofducks/ansible-vim'
Plugin 'ervandew/supertab'
Plugin 'docker/docker'
Plugin 'scrooloose/nerdtree'
Plugin 'beigebrucewayne/Turtles' " I like turtles
Plugin 'junegunn/goyo.vim'

" All plugins must be added before the following line
" (this is the end, my only friend. the end.)
call vundle#end()            " required
filetype plugin indent on    " required

" set the colour scheme!
colorscheme turtles " from the vundle above

" specific to the vim-airline plugin:
" set airline theme
let g:airline_theme = 'powerlineish'
" use powerline fonts if we can
let g:airline_powerline_fonts = 1

" syntastic settings;
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

" force these types of files to always be ansible
" since that's all I edit anyway
autocmd BufRead,BufNewFile *.yml set ft=ansible
autocmd BufRead,BufNewFile *.j2 set ft=ansible
autocmd BufRead,BufNewFile *.yaml set ft=ansible

" shade the window a different colour when wider than 80col.. should be here ->
execute "set colorcolumn=" . join(range(81,82), ',')
" and now make it a suitable colour, not BRIGHT RED
highlight ColorColumn ctermbg=0 guibg=lightgrey

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

" deal with backups and other junky files
set nobackup                    " backups are annoying
set writebackup                 " temp backup during write
set undodir=~/.vim/undo         " persistent undo storage
set undofile                    " persistent undo on
" theming specifc.
set background=dark " we are using a dark background

syntax on " yes we want syntax
set history=10000 " How many lines of history to remember
set cf " enable error files and error jumping
set clipboard+=unnamed " turns out I do like clipboard
set ffs=unix,dos,mac " support all three, in this order
set viminfo+=! " make sure it can save viminfo
set viminfo='10,\"100,:20,%,n~/.viminfo
set isk+=_,$,@,%,#,- " none of these should be word dividers
set scrolloff=2 " Minimal number of screen lines to keep above and below.
set t_Co=256 "number of terminal colours to use. (all of them)
set lsp=1 " space it out a little more (easier to read)
set wildmenu " turn on wild menu
set ruler " Always show current positions along the bottom
set cmdheight=1 " the command bar is 1 high
set lz " do not redraw while running macros (much faster) (LazyRedraw)
set hid " you can change buffer without saving
set whichwrap+=<,>,h,l  " backspace and cursor keys wrap to
set shortmess=atI " shortens messages to avoid 'press a key' prompt
set report=0 " tell us when anything is changed via :...
set noerrorbells " don't make noise
set noswapfile " don't write a swapfile
set smarttab "  When on, a <Tab> in front of a line inserts blanks according to 'shiftwidth'.
set laststatus=2 " always show the status line
set ai " autoindent
set nosmartindent " it's balls.
set cindent " do c-style indenting
setlocal smarttab " tab according to shiftwidth
set expandtab
set nonu " I don't like numbers. we can see them with our statusbar anyway
set nowrap " do not wrap lines
set smarttab autoindent " use tabs at the start of a line, spaces elsewhere
set expandtab " use the right amount of numbers to tab in insert mode
set ignorecase smartcase
set showmatch
set ttyfast         " smoother changes
set hlsearch
set incsearch

" I keep typing :Q! instead of :q! and it's annoying
" this fixes it ;)
command -bang -bar Q :q<bang>

" global, forces all comments to look the same in my colour schemes.
set comments+=b:\"
set comments+=n::
set comments+=b:#

"The following line sets the smartindent mode for *.py files.
"It means that after typing lines which start with any of the keywords
" in the list (ie. def, class, if, etc)
"the next line will automatically indent itself to the next level of indentation:
autocmd BufRead *.py set smartindent cinwords=if,elif,else,for,while,try,except,finally,def,class
au FileType py set textwidth=79 " PEP-8 Friendly

